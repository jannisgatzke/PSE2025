<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fragenkatalog</title>
    <link rel="stylesheet" href="/css/main.css">
</head>
<body>
    <div class="logo-container">
        <img src="/images/logo.png" alt="Logo" class="logo">
    </div>
    <h1>üìñ Fragenkatalog</h1>
    <div class="back-button">
        <a href="/api/users/profile">‚¨Ö Zur√ºck</a>
    </div>

    <!-- Button zum √ñffnen der Modal-Box -->
    <button id="open-modal">‚ûï Frage hinzuf√ºgen</button>

    <!-- Modal-Box -->
    <div id="question-modal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Neue Frage erstellen</h2>
            <form id="question-form">
                <input type="text" name="question" placeholder="Frage eingeben" required><br/>
                <input type="text" name="kurs" placeholder="Kurs eingeben" required><br/>
                <input type="text" name="rightAnswer" placeholder="Richtige Antwort" required><br/>
                <input type="text" name="wrongAnswer1" placeholder="Falsche Antwort 1" required><br/>
                <input type="text" name="wrongAnswer2" placeholder="Falsche Antwort 2" required><br/>
                <input type="text" name="wrongAnswer3" placeholder="Falsche Antwort 3" required><br/>
                <textarea name="explanation" placeholder="Erkl√§rung"></textarea><br/>
                <button type="submit">Frage speichern</button>
            </form>
        </div>
    </div>

    <table class="user-table">
        <thead>
            <tr>
                <th>Frage</th>
                <th>Kurs</th>
                <th>Autor</th>
                <th>Richtige Antworten</th>
                <th>Falsche Antworten</th>
                <th>Erkl√§rung</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="questions-table">
            <!-- Fragen werden hier dynamisch eingef√ºgt -->
        </tbody>
    </table>

    <!-- CSS f√ºr die Modal-Box -->
    <style>
        /* Modal-Box Hintergrund */
        .modal {
            display: none; /* Standardm√§√üig versteckt */
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        /* Modal-Box Inhalt */
        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            width: 400px;
            text-align: center;
            position: relative;
        }

        .close {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            cursor: pointer;
        }

        input, textarea {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: rgb(214, 255, 98);
            color: #1d1d1d;
            border: none;
            padding: 10px;
            width: 80%;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
        }

        button:hover {
            background-color: rgb(190, 241, 52);
        }
    </style>

    <script>
        async function fetchQuestions() {
            try {
                const response = await fetch('/api/questions');
                const questions = await response.json();
                const tableBody = document.getElementById("questions-table");
                tableBody.innerHTML = "";

                questions.forEach(q => {
                    const row = `<tr>
                        <td>${q.question}</td>
                        <td>${q.kurs || 'Unbekannt'}</td>
                        <td>${q.author || 'Unbekannt'}</td>
                        <td>${q.rigthAnswers ? q.rigthAnswers.join(", ") : 'Keine'}</td>
                        <td>${q.wrongAnswers ? q.wrongAnswers.join(", ") : 'Keine'}</td>
                        <td>${q.explanation || 'Keine'}</td>
                        <td>
                            <button class="delete-button" data-id="${q._id}">üóë L√∂schen</button>
                        </td>
                    </tr>`;
                    tableBody.innerHTML += row;
                });
            } catch (error) {
                console.error("Fehler beim Abrufen der Fragen:", error);
            }
        }

        // Elemente ausw√§hlen
        const modal = document.getElementById("question-modal");
        const openModalButton = document.getElementById("open-modal");
        const closeModalButton = document.querySelector(".close");
        const form = document.getElementById("question-form");

        // √ñffnen der Modal-Box
        openModalButton.addEventListener("click", () => {
            modal.style.display = "flex";
        });

        // Schlie√üen der Modal-Box (durch "X")
        closeModalButton.addEventListener("click", () => {
            modal.style.display = "none";
        });

        // Schlie√üen der Modal-Box, wenn au√üerhalb geklickt wird
        window.addEventListener("click", (event) => {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });

        // Event-Listener f√ºr das Absenden des Formulars
        form.addEventListener("submit", async function(event) {
            event.preventDefault();

            // Werte aus den Eingabefeldern holen
            const question = document.querySelector("input[name='question']").value;
            const kurs = document.querySelector("input[name='kurs']").value;
            const rightAnswer = document.querySelector("input[name='rightAnswer']").value;
            const wrongAnswer1 = document.querySelector("input[name='wrongAnswer1']").value;
            const wrongAnswer2 = document.querySelector("input[name='wrongAnswer2']").value;
            const wrongAnswer3 = document.querySelector("input[name='wrongAnswer3']").value;
            const explanation = document.querySelector("textarea[name='explanation']").value;

            // Alle Antworten als Arrays formatieren
            const rightAnswers = [rightAnswer];
            const wrongAnswers = [wrongAnswer1, wrongAnswer2, wrongAnswer3];

            // Anfrage an das Backend senden
            const response = await fetch("/api/questions", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ question, kurs, rigthAnswers: rightAnswers, wrongAnswers, explanation })
            });

            const data = await response.json();
            alert(data.message);

            // Falls die Frage erfolgreich gespeichert wurde:
            if (response.ok) {
                modal.style.display = "none"; // Modal-Box schlie√üen
                fetchQuestions(); // Tabelle aktualisieren
                form.reset(); // Formular leeren
            }
        });

        fetchQuestions();

        document.addEventListener("click", async function(event) {
    if (event.target.classList.contains("delete-button")) {
        const questionId = event.target.getAttribute("data-id");

        console.log("L√∂sche Frage mit ID:", questionId);

        if (confirm("Willst du diese Frage wirklich l√∂schen?")) {
            const response = await fetch("/api/questions/delete", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ id: questionId })
            });

            const data = await response.json();
            alert(data.message);

            if (response.ok) {
                fetchQuestions(); // Tabelle neu laden
            }
        }
    }
});

    </script>
</body>
</html>
